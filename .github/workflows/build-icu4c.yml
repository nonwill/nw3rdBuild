name: Build icu4c with mingw64

on:
  push:
    branches: [main]
    paths:
      - '.github/workflows/build-icu4c.yml'
      - 'mingw-gcc.txt'
      - 'cl_version'

env:
  ICU4C_VERSION: "77_1"
  ICU4C_VERREL: "77-1"

jobs:
  windows-msvc-2019:
    runs-on: windows-2019
    strategy:
      fail-fast: false
      matrix:
        include:
          - arch: 'x64'
            plat: 'x64'
            win_ver: 'Win64'
          - arch: 'x86'
            plat: 'Win32'
            win_ver: 'Win32'
    steps:
    - uses: actions/checkout@v4

    - name: Install or Download Dependencies
      run: |
        mkdir deps
        cd deps && mkdir mingw64 && cd ..
        curl -L https://github.com/unicode-org/icu/releases/download/release-${{ env.ICU4C_VERREL }}/icu4c-${{ env.ICU4C_VERSION }}-src.tgz -o icu4c-${{ env.ICU4C_VERSION }}.tgz
        dir
        tar -xf icu4c-${{ env.ICU4C_VERSION }}.tgz
        dir

    - name: Set up MSBuild
      uses: microsoft/setup-msbuild@v2

    - name: Build Solution
      run: msbuild icu/source/allinone/allinone.sln /p:Configuration=Release /p:Platform=${{ matrix.plat }} /p:SkipUWP=true
    - name: "Run PowerShell: Distrelease script (${{ matrix.arch }})"
      shell: pwsh
      run: |
        cd ./icu/
        ./packaging/distrelease.ps1 -arch ${{ matrix.arch }}
    - name: Extract ICU version and rename zip file
      id: set-zip-name
      run: |
        $newZipName = "icu4c-${{ env.ICU4C_VERSION }}-msvc2019-${{ matrix.arch }}"
        Write-Host "New Zip Name: $newZipName"
        # Rename the existing zip file
        cd icu\source\dist\ && ls -l .
        Rename-Item -Path icu-windows.zip -NewName "${newZipName}.zip"
        ls -l .
    - name: Upload icu4c-${{ env.ICU4C_VERSION }}
      uses: softprops/action-gh-release@v2
      with:
        tag_name: icu4c-${{ env.ICU4C_VERSION }}
        name: Latest build of icu4c-${{ env.ICU4C_VERSION }}
        draft: false
        prerelease: false
        files: |
          ./icu/source/dist/icu4c-${{ env.ICU4C_VERSION }}-*.zip

  build_with_mingw-gcc14:
    needs: windows-msvc-2019
    runs-on: windows-2019
    defaults:
      run:
        shell: msys2 {0}
    steps:
    - name: Install msys2
      uses: msys2/setup-msys2@v2
      with:
        update: true
        install: >-
            make
            unzip
            gzip
            p7zip
            m4
            nasm
            patch
            tar
            texinfo
            perl
            curl
            git

    - uses: actions/checkout@v4

    - name: Install or Download Dependencies
      run: |
        perl --version
        mkdir deps
        cd deps && mkdir mingw64 && cd ..
        curl -L https://github.com/unicode-org/icu/releases/download/release-${{ env.ICU4C_VERREL }}/icu4c-${{ env.ICU4C_VERSION }}-src.tgz -o icu4c-${{ env.ICU4C_VERSION }}.tgz
        curl -L https://github.com/nonwill/mingw-distro/releases/download/mingw64-gcc-crt_latest/mingw-w64+gcc-i686-all.7z -o mingw-w64_gcc-i686-all.7z
        curl -L https://github.com/nonwill/mingw-distro/releases/download/mingw64-gcc-crt_latest/mingw-w64+gcc-x86_64-all.7z -o mingw-w64_gcc-x86_64-all.7z
        dir

    - name: MinGW Build icu4c-${{ env.ICU4C_VERSION }}
      run: |
        export WSP_ROOT=$PWD
        export USER_MINGW_DIR=$WSP_ROOT/deps/mingw64
        echo ~~~~~~~~~~~~ mingw32 build prepare ~~~~~~~~~~~~
        7z x mingw-w64_gcc-i686-all.7z -r -o$USER_MINGW_DIR
        rm -f mingw-w64_gcc-i686-all.7z
        export PATH=$USER_MINGW_DIR/bin:$PATH
        gcc -v
        echo ~~~~~~~~~~~~ mingw32 build begin ~~~~~~~~~~~~
        tar -xf icu4c-${{ env.ICU4C_VERSION }}.tgz
        cd icu/source
        ./runConfigureICU  MinGW  --prefix=$WSP_ROOT/icu4c-${{ env.ICU4C_VERSION }}-mingw64 \
            CXXFLAGS=-std=gnu++17 && make -j 4 && make install
        cd ../..
        strip $WSP_ROOT/icu4c-${{ env.ICU4C_VERSION }}-mingw64/bin/*.dll
        strip $WSP_ROOT/icu4c-${{ env.ICU4C_VERSION }}-mingw64/bin/*.exe
        cd $WSP_ROOT/icu4c-${{ env.ICU4C_VERSION }}-mingw64
        7z -mx5 a ../icu4c-${{ env.ICU4C_VERSION }}-mingw64-i686.7z *
        cd ..
        echo ~~~~~~~~~~~~ mingw32 build end ~~~~~~~~~~~~
        rm -rf icu
        rm -rf $WSP_ROOT/icu4c-${{ env.ICU4C_VERSION }}-mingw64
        rm -rf $USER_MINGW_DIR/*
        echo ~~~~~~~~~~~~ mingw64 build prepare ~~~~~~~~~~~~
        7z x mingw-w64_gcc-x86_64-all.7z -r -o$USER_MINGW_DIR
        rm -f mingw-w64_gcc-x86_64-all.7z
        gcc -v
        echo ~~~~~~~~~~~~ mingw64 build begin ~~~~~~~~~~~~
        tar -xf icu4c-${{ env.ICU4C_VERSION }}.tgz
        cd icu/source
        ./runConfigureICU  MinGW  --prefix=$WSP_ROOT/icu4c-${{ env.ICU4C_VERSION }}-mingw64 \
            CXXFLAGS=-std=gnu++17 && make -j 4 && make install
        cd ../..
        strip $WSP_ROOT/icu4c-${{ env.ICU4C_VERSION }}-mingw64/bin/*.dll
        strip $WSP_ROOT/icu4c-${{ env.ICU4C_VERSION }}-mingw64/bin/*.exe
        cd $WSP_ROOT/icu4c-${{ env.ICU4C_VERSION }}-mingw64
        7z -mx5 a ../icu4c-${{ env.ICU4C_VERSION }}-mingw64-x86_64.7z *
        cd ..
        echo ~~~~~~~~~~~~ mingw64 build end ~~~~~~~~~~~~
        rm -rf icu
        rm -rf $WSP_ROOT/icu4c-${{ env.ICU4C_VERSION }}-mingw64

    - name: Setup msvc2019 x64 Environment
      uses: ilammy/msvc-dev-cmd@v1

    - name: Get date and Cl version
      id: vars
      shell: bash
      run: |
        export WSP_ROOT=$PWD
        export USER_MINGW_DIR=$WSP_ROOT/deps/mingw64
        export PATH=$USER_MINGW_DIR/bin:$PATH
        echo "update_date=$(date +'%Y-%m-%d')" >> $GITHUB_OUTPUT
        echo "vc_install_dir=$VCToolsInstallDir" >> $GITHUB_OUTPUT
        echo "cl_exe_info=$(cl > cl_version 2>&1 && head -n 1 cl_version)" >> $GITHUB_OUTPUT
        echo "gcc_exe_info=$(gcc --version > gcc_version 2>&1 && head -n 1 gcc_version)" >> $GITHUB_OUTPUT
        rm -rf $USER_MINGW_DIR

    - uses: andreaswilli/delete-release-assets-action@v4.0.0
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        tag: icu4c-${{ env.ICU4C_VERSION }}
        deleteOnlyFromDrafts: false

    - name: Upload icu4c-${{ env.ICU4C_VERSION }}
      uses: softprops/action-gh-release@v2
      with:
        tag_name: icu4c-${{ env.ICU4C_VERSION }}
        name: Latest build of icu4c-${{ env.ICU4C_VERSION }}
        body: |
          date: ${{ steps.vars.outputs.update_date }}
          cl: ${{ steps.vars.outputs.cl_exe_info }}
          gcc: ${{ steps.vars.outputs.gcc_exe_info }}
        draft: false
        prerelease: false
        make_latest: true
        files: |
          ./icu4c-${{ env.ICU4C_VERSION }}-*.7z
